ext.getProjectsFromLocationProperties = {
    def result = new ArrayList<File>()
    def propertyFile = file('../../locations.properties')
    if (propertyFile.exists()) {
        def Properties props = new Properties()
        def names = XTEXT_GRADLE_PROJECT_NAMES.split(",")
        props.load(new FileInputStream(propertyFile))
        names.each {
            name ->
            def propertyName = "git.clone.xtext.${name}.location"
            def propertyDefault = "gitclonextext${name}locationprototype"
            def propertyValue = props.getProperty(propertyName)
            if (propertyValue != null && propertyValue != propertyDefault) {
            	def file = file(propertyValue)
                if (file.exists()) {
                	result.add(file)
                }
            }
    	}
    } 
    return result
}

/**
 * Map of Xtext project locations.
 * Key: Project short name, e.g. 'xtext-core' => 'core'
 * Value: Project directory (java.io.File)
 */
ext.projectLocations = {
    def projects = getProjectsFromLocationProperties()
    def project2location = [:]
    if (projects.isEmpty()) {
        // default behaviour if no locations.properties was generated by oomph
        file("$rootDir/../../..").listFiles()
        .findAll { file ->
            file.isDirectory() && XTEXT_GRADLE_PROJECTS.any{p->file.name.contains(p)} && new File(file, "settings.gradle").exists()
        }.each { file -> 
            projects.add(file)
        }
    }
    projects.each { dir ->
        String projectName = findProjectName(dir).replace("xtext-","")
        project2location[projectName] = dir
    }
    return project2location
}

def findProjectName(rootPath) {
    try {
        Properties props =  new Properties()
        props.load(new FileInputStream(new File(rootPath, "settings.gradle")))
        return props.getProperty('rootProject.name').replace("'","")
    } catch(Exception e) {
        return rootPath
    }
}
